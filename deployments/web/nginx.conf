
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # set client body size to 10M #
    client_max_body_size 10M;

    server {
        root   /usr/share/nginx/html;
        index  index.html;
        error_page 404 =200 /index.html;

        # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
        # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for this particular website if it was disabled by the user.
        # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
        add_header X-XSS-Protection "1; mode=block";

        # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
        # to disable content-type sniffing on some browsers.
        # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
        # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
        # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
        # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
        add_header X-Content-Type-Options nosniff;

        #The Cache-Control general-header field is used to specify directives for caching mechanisms in both requests and responses. Caching directives are unidirectional,
        # meaning that a given directive in a request is not implying that the same directive is to be given in the response.
        add_header Cache-Control "public";

        #The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a <frame>, <iframe>, <embed> or <object>.
        # Sites can use this to avoid clickjacking attacks, by ensuring that their content is not embedded into other sites.
        #The added security is only provided if the user accessing the document is using a browser supporting X-Frame-Options.
        add_header X-Frame-Options: "sameorigin";

        # Cache: Media (images, icons, video, audio, HTC)
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1d;
            access_log off;
            add_header Cache-Control "public";
        }

        # Do not cache internationalization
        location ~* /assets/i18n/en.json {
            expires off;
            access_log off;
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            etag off;
        }

        # Cache: CSS and Javascript
        location ~* \.(?:css|js)$ {
            expires 1d;
            access_log off;
            add_header Cache-Control "public";
        }
    }
    include /etc/nginx/conf.d/*.conf;
}