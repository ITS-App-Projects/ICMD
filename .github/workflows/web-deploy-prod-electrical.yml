name: web-deploy-prod-electrical

on:
  push:
    branches: [ "release" ]
  workflow_dispatch:

jobs:
  # Declaration of variables
  vars:
    runs-on: ubuntu-latest
    environment: production

    outputs:
      IMAGE_VERSION: ${{ steps.vars.outputs.image_version}}
      IMAGE_NAME: 'electrical-web'
      IMAGE_REPO: "${{ vars.AZURE_ACR_SHARED }}.azurecr.io/electrical-web"
      INGRESS_HOST: "electrical.coengineer.com.au"
      CHART_PATH: "deployments/web/chart"
      CHART_OVERRIDE_PATH: "deployments/web/chart/values.yaml"
      CHART_NAMESPACE: "ce-apps"
      DOCKERFILE_PATH: "deployments/web/Dockerfile"

    steps:
    - uses: actions/checkout@v3

    - name: vars
      id: vars
      run: |
        build_target=${GITHUB_REF#refs/*/}
        version=${build_target////-}
        short_sha=$(git rev-parse --short HEAD)
        now=$(date +'%Y%m%dT%H%M%S')
        ver=${version}-${short_sha}-${now}

        echo $ver
        echo "image_version=${ver}" >> $GITHUB_OUTPUT

  # Build and upload the artifacts
  call-build-and-upload:
    uses: ./.github/workflows/web-build-and-upload.yml
    needs: [vars]

    with:
      environment: production
      image_version: ${{ needs.vars.outputs.IMAGE_VERSION }}
    secrets: inherit

  # Publish image from artifacts to ACR
  call-publish-to-acr:
    uses: ./.github/workflows/publish-to-acr.yml
    needs: [vars, call-build-and-upload]

    with:
      environment: production
      workspace: web
      image_tag: ${{ needs.vars.outputs.IMAGE_REPO }}:${{ needs.vars.outputs.IMAGE_VERSION }}
      dockerfile_path: ${{ needs.vars.outputs.DOCKERFILE_PATH }}
    secrets: inherit

  # Publish image from ACR to AKS
  call-publish-to-aks:
    uses: ./.github/workflows/publish-to-aks.yml
    needs: [vars, call-build-and-upload, call-publish-to-acr]
    permissions:
      actions: read
      contents: read
      id-token: write

    with:
      environment: production
      image_full_repo: ${{ needs.vars.outputs.IMAGE_REPO }}:${{ needs.vars.outputs.IMAGE_VERSION }}
      image_host: ${{ needs.vars.outputs.INGRESS_HOST }}
      release_name: ${{ needs.vars.outputs.IMAGE_NAME }}
      namespace: ${{ needs.vars.outputs.CHART_NAMESPACE }}
      chart_path: ${{ needs.vars.outputs.CHART_PATH }}
      chart_override_path: ${{ needs.vars.outputs.CHART_OVERRIDE_PATH }}
    secrets: inherit
